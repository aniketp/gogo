// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,      /* INVALID */
			nil,      /* $ */
			shift(2), /* identifier */
			shift(3), /* ( */
			nil,      /* ) */
			nil,      /* [ */
			nil,      /* intLit */
			nil,      /* ] */
			nil,      /* assignOp */
			nil,      /* binaryOp */
			nil,      /* blankIdent */
			nil,      /* blockBegin */
			nil,      /* blockEnd */
			nil,      /* boolConst */
			nil,      /* dotOp */
			nil,      /* escapeChar */
			nil,      /* floatLit */
			nil,      /* kwdBreak */
			nil,      /* kwdCase */
			nil,      /* kwdConst */
			nil,      /* kwdContinue */
			nil,      /* kwdDefault */
			nil,      /* kwdDefer */
			nil,      /* kwdElse */
			nil,      /* kwdFor */
			nil,      /* kwdFunc */
			nil,      /* kwdGoto */
			nil,      /* kwdIf */
			nil,      /* kwdImport */
			nil,      /* kwdNil */
			nil,      /* kwdPackage */
			nil,      /* kwdRange */
			nil,      /* kwdRet */
			nil,      /* kwdSet */
			nil,      /* kwdStruct */
			nil,      /* kwdSwitch */
			nil,      /* kwdType */
			nil,      /* kwdVar */
			nil,      /* runeLit */
			nil,      /* separator */
			nil,      /* shortAssign */
			nil,      /* stringLit */
			nil,      /* terminator */
			nil,      /* type */
			nil,      /* unaryOp */
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          /* INVALID */
			accept(true), /* $ */
			nil,          /* identifier */
			nil,          /* ( */
			nil,          /* ) */
			nil,          /* [ */
			nil,          /* intLit */
			nil,          /* ] */
			nil,          /* assignOp */
			nil,          /* binaryOp */
			nil,          /* blankIdent */
			nil,          /* blockBegin */
			nil,          /* blockEnd */
			nil,          /* boolConst */
			nil,          /* dotOp */
			nil,          /* escapeChar */
			nil,          /* floatLit */
			nil,          /* kwdBreak */
			nil,          /* kwdCase */
			nil,          /* kwdConst */
			nil,          /* kwdContinue */
			nil,          /* kwdDefault */
			nil,          /* kwdDefer */
			nil,          /* kwdElse */
			nil,          /* kwdFor */
			nil,          /* kwdFunc */
			nil,          /* kwdGoto */
			nil,          /* kwdIf */
			nil,          /* kwdImport */
			nil,          /* kwdNil */
			nil,          /* kwdPackage */
			nil,          /* kwdRange */
			nil,          /* kwdRet */
			nil,          /* kwdSet */
			nil,          /* kwdStruct */
			nil,          /* kwdSwitch */
			nil,          /* kwdType */
			nil,          /* kwdVar */
			nil,          /* runeLit */
			nil,          /* separator */
			nil,          /* shortAssign */
			nil,          /* stringLit */
			nil,          /* terminator */
			nil,          /* type */
			nil,          /* unaryOp */
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			reduce(1), /* $, reduce: Type */
			nil,       /* identifier */
			nil,       /* ( */
			nil,       /* ) */
			nil,       /* [ */
			nil,       /* intLit */
			nil,       /* ] */
			nil,       /* assignOp */
			nil,       /* binaryOp */
			nil,       /* blankIdent */
			nil,       /* blockBegin */
			nil,       /* blockEnd */
			nil,       /* boolConst */
			nil,       /* dotOp */
			nil,       /* escapeChar */
			nil,       /* floatLit */
			nil,       /* kwdBreak */
			nil,       /* kwdCase */
			nil,       /* kwdConst */
			nil,       /* kwdContinue */
			nil,       /* kwdDefault */
			nil,       /* kwdDefer */
			nil,       /* kwdElse */
			nil,       /* kwdFor */
			nil,       /* kwdFunc */
			nil,       /* kwdGoto */
			nil,       /* kwdIf */
			nil,       /* kwdImport */
			nil,       /* kwdNil */
			nil,       /* kwdPackage */
			nil,       /* kwdRange */
			nil,       /* kwdRet */
			nil,       /* kwdSet */
			nil,       /* kwdStruct */
			nil,       /* kwdSwitch */
			nil,       /* kwdType */
			nil,       /* kwdVar */
			nil,       /* runeLit */
			nil,       /* separator */
			nil,       /* shortAssign */
			nil,       /* stringLit */
			nil,       /* terminator */
			nil,       /* type */
			nil,       /* unaryOp */
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,      /* INVALID */
			nil,      /* $ */
			shift(4), /* identifier */
			nil,      /* ( */
			nil,      /* ) */
			nil,      /* [ */
			nil,      /* intLit */
			nil,      /* ] */
			nil,      /* assignOp */
			nil,      /* binaryOp */
			nil,      /* blankIdent */
			nil,      /* blockBegin */
			nil,      /* blockEnd */
			nil,      /* boolConst */
			nil,      /* dotOp */
			nil,      /* escapeChar */
			nil,      /* floatLit */
			nil,      /* kwdBreak */
			nil,      /* kwdCase */
			nil,      /* kwdConst */
			nil,      /* kwdContinue */
			nil,      /* kwdDefault */
			nil,      /* kwdDefer */
			nil,      /* kwdElse */
			nil,      /* kwdFor */
			nil,      /* kwdFunc */
			nil,      /* kwdGoto */
			nil,      /* kwdIf */
			nil,      /* kwdImport */
			nil,      /* kwdNil */
			nil,      /* kwdPackage */
			nil,      /* kwdRange */
			nil,      /* kwdRet */
			nil,      /* kwdSet */
			nil,      /* kwdStruct */
			nil,      /* kwdSwitch */
			nil,      /* kwdType */
			nil,      /* kwdVar */
			nil,      /* runeLit */
			nil,      /* separator */
			nil,      /* shortAssign */
			nil,      /* stringLit */
			nil,      /* terminator */
			nil,      /* type */
			nil,      /* unaryOp */
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,      /* INVALID */
			nil,      /* $ */
			nil,      /* identifier */
			nil,      /* ( */
			shift(5), /* ) */
			nil,      /* [ */
			nil,      /* intLit */
			nil,      /* ] */
			nil,      /* assignOp */
			nil,      /* binaryOp */
			nil,      /* blankIdent */
			nil,      /* blockBegin */
			nil,      /* blockEnd */
			nil,      /* boolConst */
			nil,      /* dotOp */
			nil,      /* escapeChar */
			nil,      /* floatLit */
			nil,      /* kwdBreak */
			nil,      /* kwdCase */
			nil,      /* kwdConst */
			nil,      /* kwdContinue */
			nil,      /* kwdDefault */
			nil,      /* kwdDefer */
			nil,      /* kwdElse */
			nil,      /* kwdFor */
			nil,      /* kwdFunc */
			nil,      /* kwdGoto */
			nil,      /* kwdIf */
			nil,      /* kwdImport */
			nil,      /* kwdNil */
			nil,      /* kwdPackage */
			nil,      /* kwdRange */
			nil,      /* kwdRet */
			nil,      /* kwdSet */
			nil,      /* kwdStruct */
			nil,      /* kwdSwitch */
			nil,      /* kwdType */
			nil,      /* kwdVar */
			nil,      /* runeLit */
			nil,      /* separator */
			nil,      /* shortAssign */
			nil,      /* stringLit */
			nil,      /* terminator */
			nil,      /* type */
			nil,      /* unaryOp */
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			reduce(2), /* $, reduce: Type */
			nil,       /* identifier */
			nil,       /* ( */
			nil,       /* ) */
			nil,       /* [ */
			nil,       /* intLit */
			nil,       /* ] */
			nil,       /* assignOp */
			nil,       /* binaryOp */
			nil,       /* blankIdent */
			nil,       /* blockBegin */
			nil,       /* blockEnd */
			nil,       /* boolConst */
			nil,       /* dotOp */
			nil,       /* escapeChar */
			nil,       /* floatLit */
			nil,       /* kwdBreak */
			nil,       /* kwdCase */
			nil,       /* kwdConst */
			nil,       /* kwdContinue */
			nil,       /* kwdDefault */
			nil,       /* kwdDefer */
			nil,       /* kwdElse */
			nil,       /* kwdFor */
			nil,       /* kwdFunc */
			nil,       /* kwdGoto */
			nil,       /* kwdIf */
			nil,       /* kwdImport */
			nil,       /* kwdNil */
			nil,       /* kwdPackage */
			nil,       /* kwdRange */
			nil,       /* kwdRet */
			nil,       /* kwdSet */
			nil,       /* kwdStruct */
			nil,       /* kwdSwitch */
			nil,       /* kwdType */
			nil,       /* kwdVar */
			nil,       /* runeLit */
			nil,       /* separator */
			nil,       /* shortAssign */
			nil,       /* stringLit */
			nil,       /* terminator */
			nil,       /* type */
			nil,       /* unaryOp */
		},
	},
}
